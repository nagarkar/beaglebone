# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import telemetry_service_pb2 as telemetry__service__pb2


class TelemetryServiceStub(object):
  """Interface exported by the server.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetAttitudeQ = channel.unary_unary(
        '/telemetry.TelemetryService/GetAttitudeQ',
        request_serializer=telemetry__service__pb2.AttitudeQRequest.SerializeToString,
        response_deserializer=telemetry__service__pb2.AttitudeQResponse.FromString,
        )
    self.GetAttitudeStream = channel.unary_stream(
        '/telemetry.TelemetryService/GetAttitudeStream',
        request_serializer=telemetry__service__pb2.AttitudeQRequest.SerializeToString,
        response_deserializer=telemetry__service__pb2.AttitudeQResponse.FromString,
        )


class TelemetryServiceServicer(object):
  """Interface exported by the server.
  """

  def GetAttitudeQ(self, request, context):
    """Simple RPC
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAttitudeStream(self, request, context):
    """Server to client streaming RPC
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TelemetryServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetAttitudeQ': grpc.unary_unary_rpc_method_handler(
          servicer.GetAttitudeQ,
          request_deserializer=telemetry__service__pb2.AttitudeQRequest.FromString,
          response_serializer=telemetry__service__pb2.AttitudeQResponse.SerializeToString,
      ),
      'GetAttitudeStream': grpc.unary_stream_rpc_method_handler(
          servicer.GetAttitudeStream,
          request_deserializer=telemetry__service__pb2.AttitudeQRequest.FromString,
          response_serializer=telemetry__service__pb2.AttitudeQResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'telemetry.TelemetryService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
